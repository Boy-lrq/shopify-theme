<!doctype html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ collection.title | default: 'ÂïÜÂìÅÂàóË°®' }}</title>
    <style>
      * {
          box-sizing: border-box;
          margin: 0;
          padding: 0;
      }

      body {
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell;
          background-color: #f5f5f5;
      }

      .container {
          max-width: 1200px;
          margin: 0 auto;
          padding: 20px;
      }

      .filters {
          display: flex;
          gap: 20px;
          margin-bottom: 24px;
      }

      .search-input {
          width: 300px;
          padding: 8px 12px;
          border: 1px solid #ddd;
          border-radius: 4px;
      }

      .select-filter {
          width: 200px;
          padding: 8px;
          border-radius: 4px;
      }

      .product-list {
          display: flex;
          flex-wrap: wrap;
          gap: 20px;
          justify-content: space-around;
      }

      .product-card {
          width: 280px;
          background: white;
          border-radius: 8px;
          box-shadow: 0 4px 8px rgba(0,0,0,0.05);
          overflow: hidden;
      }

      .product-image {
          width: 100%;
          height: 200px;
          object-fit: cover;
      }

      .product-content {
          padding: 16px;
      }

      .product-title {
          font-size: 18px;
          font-weight: bold;
          margin-bottom: 8px;
      }

      .price-stock {
          display: flex;
          justify-content: space-between;
          margin-bottom: 12px;
      }

      .price {
          color: #E91E63;
          font-weight: bold;
      }

      .low-stock {
          color: red;
          font-size: 12px;
      }

      .actions {
          display: flex;
          gap: 8px;
          margin-top: 12px;
      }

      .btn {
          padding: 6px 12px;
          border: none;
          border-radius: 4px;
          cursor: pointer;
      }

      .btn-primary {
          background: #1890ff;
          color: white;
      }

      .btn-link {
          background: none;
          color: #1890ff;
          text-decoration: underline;
      }

      .pagination {
          margin-top: 24px;
          text-align: right;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div class="filters">
        <input type="text" class="search-input" placeholder="ÊêúÁ¥¢ÂïÜÂìÅ..." id="search">
        <select class="select-filter" id="category">
          <option value="">ÂÖ®ÈÉ®ÂàÜÁ±ª</option>
          {% for product_type in shop.types %}
            {% if product_type != blank %}
              <option
                value="{{ product_type }}"
                {% if current_tags contains product_type %}
                  selected
                {% endif %}
              >
                {{ product_type }}
              </option>
            {% endif %}
          {% endfor %}
        </select>
        <select class="select-filter" id="price">
          <option value="0-Infinity">ÂÖ®ÈÉ®‰ª∑Ê†º</option>
          <option value="0-5000">¬•5000‰ª•‰∏ã</option>
          <option value="5000-10000">¬•5000-10000</option>
          <option value="10000-Infinity">¬•10000+‰ª•‰∏ä</option>
        </select>
      </div>

      <div class="product-list" id="product-container">
        {% paginate collection.products by 1000 %}
          {% for product in collection.products %}
            <div
              class="product-card"
              data-name="{{ product.title | downcase }}"
              data-category="{{ product.type }}"
              data-price="{{ product.price }}"
            >
              <img
                class="product-image"
                src="{{ product.featured_image | img_url: '280x200', crop: 'center' }}"
                alt="{{ product.title }}"
              >
              <div class="product-content">
                <h3 class="product-title">{{ product.title }}</h3>
                <div class="price-stock">
                  <span class="price">{{ product.price | money }}</span>
                  {% if product.variants.first.inventory_quantity < 10
                    and product.variants.first.inventory_management != null
                  %}
                    <span class="low-stock">üî•Áº∫Ë¥ß</span>
                  {% endif %}
                </div>
                <p>{{ product.type }}</p>
                <div class="actions">
                  <form method="post" action="/cart/add">
                    <input type="hidden" name="id" value="{{ product.variants.first.id }}">
                    <button type="submit" class="btn btn-primary">Âä†ÂÖ•Ë¥≠Áâ©ËΩ¶</button>
                  </form>
                  <a href="{{ product.url }}" class="btn btn-link">Êü•ÁúãËØ¶ÊÉÖ</a>
                </div>
              </div>
            </div>
          {% endfor %}
        {% endpaginate %}
      </div>

      <div class="pagination">
        <button id="prev-page">‰∏ä‰∏ÄÈ°µ</button>
        <span id="current-page">1</span>
        <button id="next-page">‰∏ã‰∏ÄÈ°µ</button>
      </div>
    </div>

    <script>
// LiquidÊï∞ÊçÆÊ≥®ÂÖ•
const shopifyProducts = [
    {% for product in collection.products %}
    {
        id: {{ product.id | json }},
        name: {{ product.title | json }},
        price: {{ product.price }},
        category: {{ product.type | json }},
        image: {{ product.featured_image | img_url: '280x200' | json }},
        stock: {{ product.variants.first.inventory_quantity | default: 0 }},
        available: {{ product.available | json }}
    }{% unless forloop.last %},{% endunless %}
    {% endfor %}
];

// ÂàÜÈ°µÁ≥ªÁªü
let currentPage = 1;
const pageSize = 10;

function filterProducts() {
    const searchTerm = document.getElementById('search').value.toLowerCase();
    const category = document.getElementById('category').value;
    const priceRange = document.getElementById('price').value.split('-').map(v => v === 'Infinity' ? Infinity : Number(v));

    return shopifyProducts.filter(product => {
        const nameMatch = product.name.toLowerCase().includes(searchTerm);
        const categoryMatch = !category || product.category === category;
        const priceMatch = product.price >= priceRange[0] && product.price <= priceRange[1];
        return nameMatch && categoryMatch && priceMatch;
    });
}

function renderProducts() {
    const filtered = filterProducts();
    const paginated = filtered.slice((currentPage - 1) * pageSize, currentPage * pageSize);
    const container = document.getElementById('product-container');
    
    container.innerHTML = paginated.map(product => `
        <div class="product-card">
            <img class="product-image" src="${product.image}" alt="${product.name}">
            <div class="product-content">
                <h3 class="product-title">${product.name}</h3>
                <div class="price-stock">
                    <span class="price">${Shopify.formatMoney(product.price, '{{ shop.money_format }}')}</span>
                    ${product.stock < 10 && product.available ? '<span class="low-stock">üî•Áº∫Ë¥ß</span>' : ''}
                </div>
                <p>${product.category}</p>
                <div class="actions">
                    <form method="post" action="/cart/add">
                        <input type="hidden" name="id" value="${product.id}">
                        <button type="submit" class="btn btn-primary">Âä†ÂÖ•Ë¥≠Áâ©ËΩ¶</button>
                    </form>
                    <a href="/products/${product.handle}" class="btn btn-link">Êü•ÁúãËØ¶ÊÉÖ</a>
                </div>
            </div>
        </div>
    `).join('');

    document.getElementById('current-page').textContent = currentPage;
}

// ‰∫ã‰ª∂ÁõëÂê¨
document.getElementById('search').addEventListener('input', () => {
    currentPage = 1;
    renderProducts();
});

document.getElementById('category').addEventListener('change', renderProducts);
document.getElementById('price').addEventListener('change', renderProducts);

document.getElementById('prev-page').addEventListener('click', () => {
    if (currentPage > 1) {
        currentPage--;
        renderProducts();
    }
});

document.getElementById('next-page').addEventListener('click', () => {
    const filtered = filterProducts();
    if (currentPage < Math.ceil(filtered.length / pageSize)) {
        currentPage++;
        renderProducts();
    }
});

// ÂàùÂßãÂåñ
renderProducts();
    </script>
  </body>
</html>
